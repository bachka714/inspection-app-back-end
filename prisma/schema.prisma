generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name      String   @db.VarChar(200)
  code      String?  @unique @db.VarChar(64)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  users     User[]

  @@map("organizations")
}

model User {
  id           BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  orgId        BigInt       @map("org_id") @db.UnsignedBigInt
  email        String       @unique @db.VarChar(255)
  passwordHash String       @map("password_hash") @db.VarChar(255)
  fullName     String       @map("full_name") @db.VarChar(200)
  phone        String?      @db.VarChar(64)
  isActive     Boolean      @default(true) @map("is_active")
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @default(now()) @updatedAt @map("updated_at")
  userRoles    UserRole[]
  organization Organization @relation(fields: [orgId], references: [id])

  @@index([orgId], map: "users_org_id_fkey")
  @@map("users")
}

model Role {
  id        BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name      String     @unique @db.VarChar(64)
  userRoles UserRole[]

  @@map("roles")
}

model UserRole {
  userId BigInt @map("user_id") @db.UnsignedBigInt
  roleId BigInt @map("role_id") @db.UnsignedBigInt
  role   Role   @relation(fields: [roleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
  @@index([roleId], map: "user_roles_role_id_fkey")
  @@map("user_roles")
}
